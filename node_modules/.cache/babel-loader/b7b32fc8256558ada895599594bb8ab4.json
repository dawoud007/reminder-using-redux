{"ast":null,"code":"import { Add_reminder, Remove_reminder, Clear_reminder } from '../types';\nimport { bake_cookie, read_cookie } from 'sfcookies';\n\nconst reminder = (state = [], action) => {\n  let reminder = [];\n  s;\n\n  if (action.type === Add_reminder) {\n    reminder = [...state, {\n      text: action.text,\n      date: action.date,\n      id: Math.random()\n    }];\n    bake_cookie('reminder', reminder);\n    return reminder;\n  } else if (action.type === Remove_reminder) {\n    reminder = state.filter(reminder => reminder.id != action.id);\n    bake_cookie('reminder', reminder);\n    return reminder;\n  } else if (action.type === Clear_reminder) {\n    reminder = [];\n    bake_cookie('reminder', reminder);\n    return reminder;\n  } else {\n    return state;\n  }\n};\n\nexport default reminder;","map":{"version":3,"sources":["C:/Users/user/OneDrive/Desktop/reminder/remind/src/redusers/index.js"],"names":["Add_reminder","Remove_reminder","Clear_reminder","bake_cookie","read_cookie","reminder","state","action","s","type","text","date","id","Math","random","filter"],"mappings":"AAAA,SAAQA,YAAR,EAAqBC,eAArB,EAAqCC,cAArC,QAA0D,UAA1D;AACA,SAAQC,WAAR,EAAoBC,WAApB,QAAsC,WAAtC;;AAEA,MAAMC,QAAQ,GAAC,CAACC,KAAK,GAAC,EAAP,EAAUC,MAAV,KAAmB;AAClC,MAAIF,QAAQ,GAAC,EAAb;AACAG,EAAAA,CAAC;;AACD,MAAID,MAAM,CAACE,IAAP,KAAcT,YAAlB,EAA+B;AAC3BK,IAAAA,QAAQ,GAAC,CAAC,GAAGC,KAAJ,EAAU;AAAEI,MAAAA,IAAI,EAACH,MAAM,CAACG,IAAd;AAAmBC,MAAAA,IAAI,EAACJ,MAAM,CAACI,IAA/B;AAAoCC,MAAAA,EAAE,EAACC,IAAI,CAACC,MAAL;AAAvC,KAAV,CAAT;AACAX,IAAAA,WAAW,CAAC,UAAD,EAAYE,QAAZ,CAAX;AAEA,WAAOA,QAAP;AACH,GALD,MAMK,IAAGE,MAAM,CAACE,IAAP,KAAcR,eAAjB,EAAiC;AACtCI,IAAAA,QAAQ,GAACC,KAAK,CAACS,MAAN,CAAaV,QAAQ,IAAEA,QAAQ,CAACO,EAAT,IAAeL,MAAM,CAACK,EAA7C,CAAT;AACAT,IAAAA,WAAW,CAAC,UAAD,EAAYE,QAAZ,CAAX;AACA,WAAOA,QAAP;AAEC,GALI,MAKC,IAAGE,MAAM,CAACE,IAAP,KAAcP,cAAjB,EAAgC;AAClCG,IAAAA,QAAQ,GAAC,EAAT;AACAF,IAAAA,WAAW,CAAC,UAAD,EAAYE,QAAZ,CAAX;AACA,WAAOA,QAAP;AACH,GAJK,MAMF;AACA,WAAOC,KAAP;AACH;AAIA,CA1BD;;AA2BA,eAAeD,QAAf","sourcesContent":["import {Add_reminder,Remove_reminder,Clear_reminder} from '../types'\r\nimport {bake_cookie,read_cookie} from 'sfcookies'\r\n\r\nconst reminder=(state=[],action)=>{\r\nlet reminder=[]\r\ns\r\nif (action.type===Add_reminder){\r\n    reminder=[...state,{ text:action.text,date:action.date,id:Math.random()}]\r\n    bake_cookie('reminder',reminder)\r\n    \r\n    return reminder\r\n}\r\nelse if(action.type===Remove_reminder){\r\nreminder=state.filter(reminder=>reminder.id != action.id)\r\nbake_cookie('reminder',reminder)\r\nreturn reminder\r\n\r\n}else if(action.type===Clear_reminder){\r\n    reminder=[]\r\n    bake_cookie('reminder',reminder)\r\n    return reminder\r\n}    \r\n\r\nelse{\r\n    return state\r\n}\r\n\r\n\r\n\r\n}\r\nexport default reminder\r\n"]},"metadata":{},"sourceType":"module"}